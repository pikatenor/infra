apiVersion: v1
kind: Namespace
metadata:
  name: registry

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    workload.user.cattle.io/workloadselector: deployment-registry-registry
  name: registry
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-registry-registry
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-registry-registry
    spec:
      containers:
      - name: registry
        image: registry:3@sha256:3725021071ec9383eb3d87ddbdff9ed602439b3f7c958c9c2fb941049ea6531d
        imagePullPolicy: Always
        env:
        - name: REGISTRY_HTTP_DEBUG_ADDR
          value: 0.0.0.0:5001
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: http-secret
              key: secret
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /run/secret/htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry Realm
        - name: REGISTRY_STORAGE
          value: s3
        - name: REGISTRY_STORAGE_S3_REGION
          value: ap-tokyo-1
        - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
          value: https://nrdcprlzxgzg.compat.objectstorage.ap-tokyo-1.oraclecloud.com/
        - name: REGISTRY_STORAGE_S3_BUCKET
          value: registry2
        - name: REGISTRY_STORAGE_S3_FORCEPATHSTYLE
          value: "true"
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: registry2-oracle-s3-accesskey
              key: accessKey
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: registry2-oracle-s3-accesskey
              key: secretKey
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        - containerPort: 5001
          name: httpdebug
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /debug/health
            port: 5001
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /run/secret
          name: htpasswd
        resources: {}
      restartPolicy: Always
      volumes:
      - name: htpasswd
        secret:
          defaultMode: 256
          optional: false
          secretName: htpasswd

---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    workload.user.cattle.io/workloadselector: deployment-registry-registry

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry
  namespace: registry
spec:
  rules:
    - host: c.p1kachu.net
      http:
        paths:
          - backend:
              service:
                name: registry
                port:
                  number: 80
            path: /
            pathType: Prefix 
  tls:
    - hosts:
        - c.p1kachu.net
      secretName: c-production

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: c-staging
  namespace: registry
spec:
  secretName: c-staging
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  commonName: c.p1kachu.net
  dnsNames:
  - c.p1kachu.net

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: c-production
  namespace: registry
spec:
  secretName: c-production
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: c.p1kachu.net
  dnsNames:
  - c.p1kachu.net
